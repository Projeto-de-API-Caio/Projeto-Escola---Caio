dados = {"alunos":[
                   {"nome":"lucas","id":15},
                   {"nome":"cicero","id":29},
                  ], 
        "professores":[]
        "turmas":[]}

class AlunoNaoEncontrado(Exception):
    print("Aluno não encontrado, erro 404)

def aluno_por_id(id_aluno):
    lista_alunos = dados['alunos']
    for dicionario in lista_alunos:
        if dicionario['id'] == id_aluno:
            return dicionario
    raise AlunoNaoEncontrado

def aluno_existe(id_aluno):
    try:
        aluno_por_id(id_aluno)
        return True
    except AlunoNaoEncontrado:
        return False

def adiciona_aluno(dict):
    dados['alunos'].append(dict)

def lista_alunos():
    return dados["alunos"]

def apaga_tudo():
    dados['alunos'] = []
    
    
    
    
class TurmaNaoEncontrada(Exception):
    print("Turma não encontrada, erro 404)
    
    
    def turma_por_id(id_turma):
    lista_turmas = dados['turmas']
    for dicionario in lista_turmas:
        if dicionario['id'] == id_turma:
            return dicionario
    raise TurmaNaoEncontrada

def turma_existe(id_turma):
    try:
        turma_por_id(id_turma)
        return True
    except TurmaNaoEncontrada:
        return False

def adiciona_turma(dict):
    dados['professores'].append(dict)

def lista_turmas():
    return dados["turmas"]

def apaga_tudo():
    dados['turmas'] = []
    
class ProfessorNaoEncontrado(Exception):
    print("Professor não encontrado, erro 404)
    
    
    def professor_por_id(id_professor):
    lista_professores = dados['professores']
    for dicionario in lista_professores:
        if dicionario['id'] == id_professor:
            return dicionario
    raise ProfessorNaoEncontrado

def professor_existe(id_professor):
    try:
        professor_por_id(id_professor)
        return True
    except ProfessorNaoEncontrado:
        return False

def adiciona_Professor(dict):
    dados['professores'].append(dict)

def lista_professores():
    return dados["professores"]

def apaga_tudo():
    dados['professores'] = []
